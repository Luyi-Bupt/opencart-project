# .github/workflows/ci.yml

name: Build and Push to GHCR

# 触发条件：当有代码推送到 main 分支时触发
on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest # 在一个最新的Ubuntu虚拟机上运行
    permissions:
      contents: read
      packages: write # 授予工作流写入GitHub Packages的权限

    steps:
      # 步骤1：签出（下载）您的代码到虚拟机
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤2：登录到GitHub容器镜像仓库 (GHCR)
      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} # 自动使用触发工作流的用户名
          password: ${{ secrets.GITHUB_TOKEN }} # 使用GitHub自动提供的、有时效性的令牌

      # 步骤3：构建并推送 OpenCart App v1 镜像
      - name: Build and push App v1 image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile.v1
          push: true
          tags: |
            ghcr.io/luyi-bupt/opencart-project/opencart-app:latest-v1
            ghcr.io/luyi-bupt/opencart-project/opencart-app:v1-${{ github.sha }}

      # 步骤4：构建并推送 OpenCart App v2 镜像
      - name: Build and push App v2 image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile.v2
          push: true
          tags: |
            ghcr.io/luyi-bupt/opencart-project/opencart-app:latest-v2
            ghcr.io/luyi-bupt/opencart-project/opencart-app:v2-${{ github.sha }}

      # 步骤5：构建并推送 Go 自动化工具镜像
      - name: Build and push Automation Tool image
        uses: docker/build-push-action@v5
        with:
          context: ./automation-tool
          push: true
          tags: |
            ghcr.io/luyi-bupt/opencart-project/automation-tool:latest
            ghcr.io/luyi-bupt/opencart-project/automation-tool:${{ github.sha }}

  deploy:
    name: Deploy to Server
    # 关键：这行表示，必须在两个build任务都成功完成后，才能开始此任务
    needs: [build-and-push-app, build-and-push-automation] 
    runs-on: ubuntu-latest

    steps:
      - name: SSH and Deploy
        # 我们使用一个非常流行的社区Action来简化SSH操作
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # 以下是要在您的Ubuntu服务器上执行的命令
            cd ~/Desktop/opencart-project
            docker compose pull
            docker compose up -d --remove-orphans
            echo "Deployment successful!"
